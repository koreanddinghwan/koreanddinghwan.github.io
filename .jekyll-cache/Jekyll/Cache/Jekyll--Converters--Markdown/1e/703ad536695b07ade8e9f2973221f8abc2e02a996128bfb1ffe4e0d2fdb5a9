I")1<p>첫 번째 시도는 에라토스테네스의 체가 뭔지 모르고,<br />
두 번째 시도는 알고도 틀렸다.😭 (문송…)</p>

<h1 id="내-풀이">내 풀이</h1>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>
<span class="n">m</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">().</span><span class="n">split</span><span class="p">())</span>

<span class="c1">#일반적인 소수검증하기.
</span><span class="k">def</span> <span class="nf">isprime</span><span class="p">(</span><span class="n">a</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">a</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>   <span class="c1">#1인경우, 소수판정 제외한다.
</span>    
    <span class="k">else</span><span class="p">:</span>
        <span class="c1">#2부터 입력 a의 제곱근까지의 수들 중에서 2부터 i에 할당한다.
</span>        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="nb">int</span><span class="p">(</span><span class="n">a</span><span class="o">**</span><span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="mi">2</span><span class="p">))</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span> 

            <span class="c1">#만약 i로 나눠떨어진다면, 1을 제외한 수들 중 약수가 있다는 의미이므로 소수가 아니다.
</span>            <span class="k">if</span> <span class="n">a</span> <span class="o">%</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                <span class="k">return</span> <span class="bp">False</span> 
    
        <span class="c1">#만약 소수이면 True를 리턴한다.
</span>        <span class="k">return</span> <span class="bp">True</span> 
    


<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">m</span><span class="p">,</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">isprime</span><span class="p">(</span><span class="n">i</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</code></pre></div></div>

<p><br />
<br /></p>

<h1 id="문제-정의">문제 정의</h1>
<h2 id="-에라토스테네스의-체">💡 에라토스테네스의 체</h2>

<p>에라토스테네스의 체란 수학자 에라토스테네스가 만들어낸 소수를 찾는 방법으로,</p>

<p>마치 체로 치듯이 수를 걸러낸다고 해서 에라토스테네스의 체라고 부른다.
<br />
<br /></p>

<h2 id="-소수를-판정하는-방법">💡 소수를 판정하는 방법</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>만약 9를 소수 판정한다고 하자.  

소수란 자기자신과 1을 제외한 수로 약분되지 않는 수를 의미한다. 

다르게 말하면 1과 자기자신을 제외한 수로 나눠진다면 그 수는 소수가 아니다.

그리고 모든 수는 (a*b) 로 나타낼 수 있는데, 
제곱수는 홀수의 쌍을 갖고, /9는 (1,9), (3,3), (9,1)
제곱수가 아니라면 짝수의 쌍을 가진다. /10은 (1,10), (2,5), (5,2), (10,1)
제곱수는 (k,k)의 쌍을 하나 더 가지기 때문에 홀수의 쌍을 갖게된다.

제곱수를 생각해보면  (k,k)를 기준으로 좌 우측에 원소의 위치만 다른 쌍들을 가지게 된다.
즉, √n 을 기준으로 좌우측에 쌍들을 가질 수 있다.

좌측 쌍에 대해 체크하면 자동으로 우측쌍도 체크하게되므로, 좌측쌍만 체크하면 된다.
좌측 쌍에 대해서, a의 범위는 1이상 √n 미만이다.

소수의 경우, 이 범위 내에서 1만 가질 수 있으므로, 다르게 말하면 
2이상 √n 사이에 값으로 n이 나눠지지 않는다면 그 수는 소수이다.
</code></pre></div></div>

<p>이 방법은 각각의 수에 대해 판정을 할때 사용가능하다. 그리고 N의 제곱근에 대해서 루프가 돌아가기때문에 시간복잡도가 O(sqrt(n))이다.</p>

<p><br /></p>

<p>이런 소수판정 방법에는 문제가 있는데,<br />
N개의 수에 대해서 각각 소수판정을 하고 싶을때는 N개의 수에 대해 각각 소수판정을 해야하므로<br />
시간복잡도가 O(N)으로 높아진다는 것이다.
<br />
<br />
<br /></p>

<h2 id="-에라토스테네스의-체-사용방법">💡 에라토스테네스의 체 사용방법</h2>

<p>‘범위’에 대한 소수판정 시, 유용하게 쓰이는 것이 에라토스테네스의 체이다.<br />
N개 이하의 소수를 찾고 싶을때, 2&lt;= x &lt;= √N 인 x에 대해<br />
‘자기자신을 제외한 배수’를 모두 빼주면 소수만 남는다.
<br /><br />
에라토스테네스의 체의 시간복잡도는 O(n(log(log n)) 이다.<br />
시간복잡도 O(1)에 가깝다는 것만 알아두도록 하자.</p>

<h3 id="️-에라토스테네스의-체-코드">✏️ 에라토스테네스의 체 코드</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">prime_list</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="c1"># 에라토스테네스의 체 초기화: n개 요소에 True 설정(소수로 간주)
</span>    <span class="n">sieve</span> <span class="o">=</span> <span class="p">[</span><span class="bp">True</span><span class="p">]</span> <span class="o">*</span> <span class="n">n</span>

    <span class="c1"># n의 최대 약수가 sqrt(n) 이하이므로 i=sqrt(n)까지 검사
</span>    <span class="n">m</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">n</span> <span class="o">**</span> <span class="mf">0.5</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">m</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">sieve</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="bp">True</span><span class="p">:</span>           <span class="c1"># i가 소수인 경우
</span>            <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="n">i</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">i</span><span class="p">):</span> <span class="c1"># i이후 i의 배수들을 False 판정
</span>                <span class="n">sieve</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>

    <span class="c1"># 소수 목록 산출
</span>    <span class="k">return</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">n</span><span class="p">)</span> <span class="k">if</span> <span class="n">sieve</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="bp">True</span><span class="p">]</span>

</code></pre></div></div>

<h1 id="에라토스테네스-활용한-문제풀이">에라토스테네스 활용한 문제풀이</h1>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">prime_list</span><span class="p">(</span><span class="n">m</span><span class="p">,</span><span class="n">n</span><span class="p">):</span>
    <span class="c1"># 에라토스테네스의 체 초기화: n+1개 요소에 True 설정(소수로 간주),인덱스넘버=숫자
</span>    <span class="n">sieve</span> <span class="o">=</span> <span class="p">[</span><span class="bp">True</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>  

    <span class="c1"># n의 최대 약수가 sqrt(n) 이하이므로 i=sqrt(n)까지 검사
</span>    <span class="n">checkerrange</span> <span class="o">=</span> <span class="nb">int</span><span class="p">((</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">**</span> <span class="mf">0.5</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">checkerrange</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">sieve</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="bp">True</span><span class="p">:</span>           <span class="c1"># i가 소수인 경우
</span>            <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="n">i</span><span class="p">,</span> <span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">i</span><span class="p">):</span> <span class="c1"># i이후 i의 배수들을 False 판정
</span>                <span class="n">sieve</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>
    <span class="n">sieve</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>
    <span class="n">sieve</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>

    <span class="c1"># 소수 목록 반환
</span>    <span class="k">return</span> <span class="n">sieve</span>


<span class="kn">import</span> <span class="nn">sys</span>

<span class="n">m</span><span class="p">,</span><span class="n">n</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">().</span><span class="n">split</span><span class="p">())</span>

<span class="n">sieve_list</span> <span class="o">=</span> <span class="n">prime_list</span><span class="p">(</span><span class="n">m</span><span class="p">,</span><span class="n">n</span><span class="p">)</span>
<span class="k">for</span> <span class="n">index</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">sieve_list</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">index</span> <span class="o">&gt;=</span> <span class="n">m</span> <span class="ow">and</span> <span class="n">value</span> <span class="o">==</span> <span class="bp">True</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">index</span><span class="p">)</span>

</code></pre></div></div>

:ET