I"<h1 id="closure">Closure</h1>
<p>함수는 선언되는 시점과 실행되는 시점이 서로 다르다.<br />
선언하는 시점에 어떤 변수가 있는데, 프로그램이 실행되면서 그 변수는 바뀌게된다.<br />
<br />
<br /></p>

<h2 id="-클로저란">💡 클로저란</h2>
<p>내부함수가 실행시점을 포함해 외부함수의 맥락에 접근할 수 있는 것.<br />
쉽게 말해 <br />
함수가 정의된 시점에서 외부 변수들의 현재상태와 <br />
함수가 실행된 시점에서 외부 변수들의 상태를 <b><u>격리</u></b>한다.</p>

<p>선언시점에서의 변수값을 사용하고 싶다면 클로저는 외부 스코프에 정의된 변수들도 사용할 수 있게 한다.</p>

<p><br /><br /></p>

<h2 id="-예시">💡 예시</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">createTodayExchangeRate</span><span class="p">(</span><span class="nx">rate</span><span class="p">)</span> <span class="p">{</span>

    <span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">dollar</span><span class="p">)</span> <span class="p">{</span> <span class="c1">//rate를 받아 익명함수를 리턴한다.</span>
        
        <span class="kd">var</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">dollar</span> <span class="o">*</span> <span class="nx">rate</span><span class="p">;</span> <span class="c1">//변수 계산</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span>
        <span class="k">return</span> <span class="nx">result</span>

    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">convert_exchange</span> <span class="o">=</span> <span class="nx">createTodayExchangeRate</span><span class="p">(</span><span class="mf">1117.06</span><span class="p">)</span> 
<span class="c1">//현재 환율을 넣으면 환율이 var convert_exchange안에 내재변수화된다.</span>


<span class="nx">convert_exchange</span><span class="p">(</span><span class="mi">20</span><span class="p">);</span>
<span class="c1">//1117.06이란 환율을 가진 convert_exchage 함수에 매개변수로 20을 넣어 계산리턴</span>
</code></pre></div></div>

<h2 id="-다른-예시">💡 다른 예시</h2>
<p><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Closures">MDN Web Docs</a></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">makeAdder</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
      <span class="kd">var</span> <span class="nx">y</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
      <span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">z</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">y</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
        <span class="k">return</span> <span class="nx">x</span> <span class="o">+</span> <span class="nx">y</span> <span class="o">+</span> <span class="nx">z</span><span class="p">;</span>
      <span class="p">};</span>
<span class="p">}</span>

<span class="kd">var</span> <span class="nx">add5</span> <span class="o">=</span> <span class="nx">makeAdder</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">add10</span> <span class="o">=</span> <span class="nx">makeAdder</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
    <span class="c1">//클로저에 x와 y의 환경이 저장됨</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">add5</span><span class="p">(</span><span class="mi">2</span><span class="p">));</span>  <span class="c1">// 107 (x:5 + y:100 + z:2)</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">add10</span><span class="p">(</span><span class="mi">2</span><span class="p">));</span> <span class="c1">// 112 (x:10 + y:100 + z:2)</span>
    <span class="c1">//함수 실행 시 클로저에 저장된 x, y값에 접근하여 값을 계산</span>
</code></pre></div></div>
<p>add5 변수 makeAdder(5)로 선언되는 순간, x는 5, y는 1인 상태이다.<br />
<br />
그리고 makeAdder함수는 익명함수 function(z)를 리턴하므로, 
<br />
console.log(add5(2))에서 makeAdder(5)의 익명함수 function(2)를 호출하며<br />
<br />
y는 100이 선언되고, return으로 x+y+z = 5+100+2가 된다.</p>

:ET